{"version":3,"sources":["checkMark.png","serviceWorker.js","components/ArtistDetails.js","components/AvatarContainer.js","components/AvatarShelf.js","components/Button.js","components/ButtonContainer.js","redux/actions/index.js","redux/actions/gameTypes.js","utils/quickdrawSvgRender/quickdrawSvgRender.js","components/GameWinner.js","components/PlayerList.js","utils/generateAvatarProps/options.js","utils/generateAvatarProps/generateAvatarProps.js","components/PlayerAvatar.js","components/Wrapper.js","components/ResultsRoundBar.js","components/DrawingWrapper.js","containers/Results.js","components/Canvas.js","components/DrawingStack.js","components/Form.js","components/FormLabel.js","components/GameHeader.js","components/GameName.js","components/ImageCarousel.js","components/InputField.js","components/NavBar.js","components/PlayerHasSolvedRound.js","utils/generatePicRotateDegree/generatePicRotateDegree.js","components/PolaroidPicBackground.js","components/SingleDrawing.js","components/SpeechBubble.js","components/TestVG.js","components/WordToDraw.js","components/Zorb.svg","components/Zorb.js","containers/ComponentsCatalogue.js","components/GameID.js","containers/Create.js","containers/Join.js","components/LobbyWaiting.js","utils/deviceDetector.js","containers/Lobby.js","components/GuessingContainer.js","components/CheckMark.js","components/TimeRemaining.js","components/ZorbContainer.js","containers/Game.js","containers/BetweenRounds.js","components/Confetti.js","containers/GuessedCorrectly.js","containers/Main.js","containers/Playground.js","App.js","redux/reducers/gameReducer.js","redux/reducers/pagesReducer.js","redux/reducers/currentUserReducer.js","redux/reducers/index.js","redux/actions/pagesTypes.js","redux/actions/socketTypes.js","redux/store.js","redux/middlewares/api.js","redux/middlewares/sockets.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ArtistDetails","styled","div","withConfig","displayName","componentId","props","scaled","css","_templateObject","AvatarContainer","AvatarShelf","Button","button","primary","Button_templateObject","gradient","_templateObject2","marginTop","_templateObject3","marginBottom","_templateObject4","formButton","_templateObject5","back","_templateObject6","refresh","_templateObject7","clear","_templateObject8","small","_templateObject9","noMargin","_templateObject10","ButtonContainer","connectGame","playerName","playerAvatar","gameKey","type","socket","command","payload","player","quickdrawSvgRender","drawing","viewBoxWidth","viewBoxHeight","width","height","svg","concat","forEach","loops","i","length","GameWinner","PlayerList","betweenRounds","PlayerList_templateObject","options","avatarStyle","topType","accessoriesType","hairColor","facialHairType","facialHairColor","clotheType","clotheColor","graphicType","eyeType","eyebrowType","mouthType","skinColor","generateAvatarProps","Object","keys","reduce","acc","key","id","Math","floor","random","connect","dispatch","userAvatar","avatar","Actions","localProps","useEffect","info","react_default","a","createElement","dist_default","assign","style","size","Wrapper","ComponentsCatalogue","Wrapper_templateObject","GuessedCorrectly","Wrapper_templateObject2","ResultsRoundBar","ResultsRoundBar_templateObject","DrawingWrapper","DrawingWrapper_templateObject","Content","posed","closed","open","DrawnImage","img","Results_templateObject","downArrow","className","rightArrow","SimpleSvg","encodedImage","btoa","image","imageSrc","src","state","game","restartGame","_ref","history","_useState","useState","_useState2","slicedToArray","setOpen","players","allRounds","rounds","obj","map","round","winners","flat","winner","undefined","score","max","apply","toConsumableArray","values","winnerId","el","push","components_Wrapper","components_PlayerList","components_PlayerAvatar","includes","playerId","components_GameWinner","react","object","components_ResultsRoundBar","onClick","drawings","word","toUpperCase","pose","overflow","fontSize","components_DrawingWrapper","display","flexDirection","alignItems","components_Button","mapDispatchToProps","passDrawing","act","currentUser","isDrawing","lastXCoordinate","lastYCoordinate","setDrawing","xCoordinate","yCoordinate","timestamp","_useState3","_useState4","locations","setLocations","_useState5","_useState6","count","setCount","canvasRef","useRef","_useState7","_useState8","googleGuess","setGoogleGuess","canvas","current","ctx","getContext","strokeStyle","linecap","lineWidth","draw","e","preventDefault","stopPropagation","x","y","layerX","layerY","timeStamp","beginPath","moveTo","lineTo","offsetX","offsetY","stroke","touch","touches","pageX","target","offsetLeft","pageY","offsetTop","addEventListener","postDrawingHelper","endRound","filter","roundNum","userId","xyCoordinates","prev","updatedDrawing","Fragment","ref","newLocation","clientX","clientY","border","backgroundColor","clearRect","DrawingStack","Form","form","FormLabel","h3","GameHeader","timer","GameHeader_templateObject","inGame","GameHeader_templateObject2","GameName","GameName_templateObject","GameName_templateObject2","ImageCarousel","InputField","input","NavBar","nav","PlayerHasSolvedRound","generatePicRotateDegree","number","Box","hidden","opacity","scale","rotate","visible","rotationDegree","PolaroidPicBackground","setPose","setTimeout","delay","children","SingleDrawing","SpeechBubble","span","SpeechBubble_templateObject","zorbThinking","SpeechBubble_templateObject2","TestVG","xmlns","xlink","viewBox","d","strokeWidth","fill","WordToDraw","inBetween","WordToDraw_templateObject","_extends","arguments","source","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Zorb_ref2","_ref3","transform","cx","cy","rx","ry","Zorb_SvgZorb","svgRef","enableBackground","xmlSpace","ForwardRef","forwardRef","Zorb","components_NavBar","src_components_Zorb","components_Form","components_FormLabel","components_SpeechBubble","components_AvatarContainer","components_InputField","components_GameName","components_ButtonContainer","components_GameHeader","lobby","components_Canvas","components_AvatarShelf","components_WordToDraw","components_DrawingStack","components_SingleDrawing","components_PolaroidPicBackground","components_TestVG","components_ArtistDetails","components_PlayerHasSolvedRound","components_ImageCarousel","GameID","h2","pages","create","loading","setPlayerName","userChoice","setUserChoice","onSubmit","name","onChange","event","value","required","maxLength","components_GameID","goBack","console","log","setGameKey","joinForm","gameKeyInput","join","error","setCustomValidity","reportValidity","maxLengthf","LobbyWaiting","DeviceDetector","userAgent","navigator","vendor","opera","isIOS","test","MSStream","isAndroid","host","protocol","Player","enter","transition","stiffness","exit","ShareIcon","ShareButton","url","share","icon","startGame","message","_ref2","shareUrl","opponents","isCreator","components_LobbyWaiting","react_pose_es","index","Lobby_ShareButton","GuessingContainer","Background","require","CheckMark","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","TimeRemaining","ZorbContainer","zorbGuessing","ZorbContainer_templateObject","setGuessCount","time","setTime","Date","now","endGame","components_GuessingContainer","guess","components_ZorbContainer","components_TimeRemaining","index_es","date","renderer","seconds","completed","components_CheckMark","BetweenRounds_templateObject","Author","BetweenRounds_templateObject2","BetweenRounds","BetweenRounds_SimpleSvg","marginLeft","BetweenRounds_DrawnImage","config","angle","spread","startVelocity","elementCount","dragFriction","duration","colors","WinConfetti","active","setActive","confetti_default","StyledText","react_pose_text_es","initialPose","charPoses","charIndex","Confetti","Container","Header","h1","Hero","getGameKey","api","process","react_router_dom","to","Playground","BetweenRounds_BetweenRounds","RouteContainer","beforeChildren","GlobalStyle","createGlobalStyle","App_templateObject","App","react_router","render","pathname","exact","path","component","Main","Create","Join","Lobby","Game","Results","initialState","inBetweenRounds","combineReducers","action","objectSpread","data","currentRound","roundWins","find","newState","playerDrawings","author","draws","roundStatus","middlewares","store","next","method","body","JSON","stringify","fetch","then","res","json","catch","_action$socket","io","on","emit","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","reducer","ReactDOM","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8JCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8LChBN,IAiBeC,EAjBOC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,0JAUf,SAAAK,GAAK,OACLA,EAAMC,QACNC,YADAC,OCPWC,EAJST,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,qBCaNU,EAbKV,IAAOC,IAAVC,WAAA,CAAAC,YAAA,cAAAC,YAAA,YAAGJ,CAAH,gkECAjB,IA+HeW,EA/HAX,IAAOY,OAAVV,WAAA,CAAAC,YAAA,SAAAC,YAAA,YAAGJ,CAAH,kdAwBR,SAAAK,GAAK,OACLA,EAAMQ,SACNN,YADAO,MAKA,SAAAT,GAAK,OACLA,EAAMU,UACNR,YADAS,MAOA,SAAAX,GAAK,OACLA,EAAMY,WACNV,YADAW,MAKA,SAAAb,GAAK,OACLA,EAAMc,cACNZ,YADAa,MAKA,SAAAf,GAAK,OACLA,EAAMgB,YACNd,YADAe,MAOA,SAAAjB,GAAK,OACLA,EAAMkB,MACNhB,YADAiB,MAaA,SAAAnB,GAAK,OACLA,EAAMoB,SACNlB,YADAmB,MAYA,SAAArB,GAAK,OACLA,EAAMsB,OACNpB,YADAqB,MAoBA,SAAAvB,GAAK,OACLA,EAAMwB,OACNtB,YADAuB,MAaA,SAAAzB,GAAK,OACLA,EAAM0B,UACNxB,YADAyB,OChHWC,EATSjC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,4ICiBRkC,EAAc,SAACC,EAAYC,EAAcC,EAASC,GAApC,MAA8C,CACvEA,KClByB,cDmBzBH,aACAE,UACAE,OAAQ,CACNC,QAAS,UACTF,OACAG,QAAS,CACPC,OAAQ,CACNP,aACAC,gBAEFC,cEPSM,EAxBY,SAACC,EAASC,EAAcC,GAEjD,IAAMC,EAAQF,EACRG,EAASF,EAEXG,EAAM,GAgBV,OAfAA,GAAQ,2FAAAC,OAA6FF,EAA7F,aAAAE,OAA+GH,EAA/G,mBAAAG,OAAsIF,EAAtI,KAAAE,OAAgJH,EAAhJ,KAA2J,IAEnKH,EAAQO,QAAQ,SAAUC,GACxBH,GAAQ,YACRA,GAAQ,KAAOG,EAAM,GAAG,GAAK,IAAMA,EAAM,GAAG,GAE5C,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAM,GAAGE,OAAQD,IACnCJ,GAAQ,MAAQG,EAAM,GAAGC,GAAK,IAAMD,EAAM,GAAGC,GAG/CJ,GAAQ,yDAGVA,GAAQ,kBCXKM,EANIvD,IAAOC,IAAVC,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGJ,CAAH,gJCAhB,IAiBewD,EAjBIxD,IAAOC,IAAVC,WAAA,CAAAC,YAAA,aAAAC,YAAA,YAAGJ,CAAH,6HAUZ,SAAAK,GAAK,OACLA,EAAMoD,eACNlD,YADAmD,OCbWC,EAAA,CACbC,YAAa,CAAC,UACdC,QAAS,CACP,SACA,WACA,MACA,QACA,SACA,aACA,aACA,aACA,aACA,kBACA,cACA,cACA,gBACA,gBACA,iBACA,gBACA,cACA,kBACA,qBACA,sBACA,qBACA,mBACA,oBACA,yBACA,oBACA,oBACA,mBACA,wBACA,sBACA,qBACA,sBACA,sBACA,iBACA,qBACA,8BAEFC,gBAAiB,CACf,QACA,OACA,iBACA,iBACA,QACA,cAEFC,UAAW,CACT,SACA,QACA,SACA,eACA,QACA,YACA,aACA,WACA,MACA,cAEFC,eAAgB,CACd,QACA,QACA,QACA,QACA,QACA,QACA,cACA,aACA,gBACA,iBACA,mBAEFC,gBAAiB,CACf,SACA,QACA,SACA,eACA,QACA,YACA,WACA,OAEFC,WAAY,CACV,cACA,gBACA,gBACA,eACA,SACA,UACA,gBACA,kBAEFC,YAAa,CACX,QACA,SACA,SACA,SACA,SACA,SACA,UACA,aACA,cACA,eACA,YACA,eACA,OACA,MACA,SAEFC,YAAa,CACX,MACA,SACA,OACA,UACA,OACA,QACA,SACA,SACA,OACA,eACA,SAEFC,QAAS,CACP,QACA,MACA,UAEA,UACA,QACA,SACA,OACA,SACA,YACA,OACA,aAEFC,YAAa,CACX,QACA,eACA,UACA,i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","file":"static/js/main.d9f34485.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkMark.28ff9026.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled, { css } from \"styled-components/macro\";\n\nconst ArtistDetails = styled.div`\n  align-items: center;\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  color: #fff;\n  margin-top: 4vh;\n  padding: 2vh 4vw;\n\n  ${props =>\n    props.scaled &&\n    css`\n      transform: scale(1.5);\n    `};\n`;\n\nexport default ArtistDetails;\n","import styled from \"styled-components/macro\";\n\nconst AvatarContainer = styled.div`\n  cursor: pointer;\n`;\n\nexport default AvatarContainer;\n","import styled from \"styled-components/macro\";\n\nconst AvatarShelf = styled.div`\n  align-items: center;\n  background-color: rgba(255,255,255,0.3);\n  color: #110627;\n  display: flex;\n  font-weight: bold;\n  height: 30px;\n  justify-content: center;\n  margin-top: -22px;\n  width: 90%;\n};\n`;\n\nexport default AvatarShelf;\n","import styled, { css } from \"styled-components/macro\";\n\nconst Button = styled.button`\n  background-color: #472c81;\n  border-radius: 50px;\n  border: transparent;\n  color: white;\n  cursor: pointer;\n  font-size: 14px;\n  margin: 0 0.5em;\n  min-width: 140 px;\n  padding: 1em 3em;\n  text-shadow: 0 1px 0px rgba(0, 0, 0, 0.05);\n  text-transform: uppercase;\n  :hover {\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.05), 0 3px 6px rgba(0, 0, 0, 0.08);\n    transform: translateY(-1px);\n  }\n  :focus {\n    outline: none;\n  }\n  :active {\n    box-shadow: 0 1px 7px rgba(255, 255, 255, 0.3),\n      0 3px 6px rgba(0, 0, 0, 0.16);\n  }\n\n  ${props =>\n    props.primary &&\n    css`\n      background: #ff87ad;\n    `};\n\n  ${props =>\n    props.gradient &&\n    css`\n      background-color: #fa709a;\n      background-image: linear-gradient(90deg, #fa709a 0%, #f5c964 87%);\n      border-color: pink;\n    `};\n\n  ${props =>\n    props.marginTop &&\n    css`\n      margin-top: 2vh;\n    `};\n\n  ${props =>\n    props.marginBottom &&\n    css`\n      margin-bottom: 2vh;\n    `};\n\n  ${props =>\n    props.formButton &&\n    css`\n      margin-left: 0;\n      margin-right: 0;\n      align-self: center;\n    `};\n\n  ${props =>\n    props.back &&\n    css`\n      background: none;\n      font-size: 0.8rem;\n      margin: 0;\n      padding: 0;\n\n      :hover,\n      :active {\n        box-shadow: none;\n      }\n    `};\n\n  ${props =>\n    props.refresh &&\n    css`\n      background-color: #ff87ad;\n      border-radius: 50%;\n      height: 30px;\n      margin: 20px 0 0 0;\n      padding: 5px;\n      position: relative;\n      width: 30px;\n      z-index: 9999;\n    `};\n\n  ${props =>\n    props.clear &&\n    css`\n      background: #ff87ad;\n      height: 30px;\n      width: 30px;\n      border-radius: 50%;\n      font-size: 0.8rem;\n      margin: 0;\n      padding: 0;\n      position: relative;\n      top: -44px;\n      right: -160px;\n      z-index: 9999;\n\n      :hover,\n      :active {\n        box-shadow: none;\n      }\n    `};\n\n  ${props =>\n    props.small &&\n    css`\n      background-color: #fff;\n      color: #472c81;\n      font-size: 10px;\n      font-weight: bold;\n\n      :hover {\n        background-color: rgba(200, 200, 200, 1);\n        transform: none;\n      }\n    `};\n\n  ${props =>\n    props.noMargin &&\n    css`\n      margin: 0;\n    `};\n`;\n\nexport default Button;\n","import styled from \"styled-components/macro\";\n\nconst ButtonContainer = styled.div`\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  height: 100px;\n  justify-content: space-around;\n  margin-top: 40px;\n`;\n\nexport default ButtonContainer;\n","import * as ActionTypes from './gameTypes';\n\nexport const getKey = () => ({\n  type: ActionTypes.GET_KEY,\n  api: {\n    url: `${process.env.REACT_APP_SERVER_BASE_URL}/getGameKey`\n  }\n});\n\nexport const saveAvatar = avatar => ({\n  type: ActionTypes.USER_AVATAR,\n  avatar\n});\n\nexport const setUserId = userId => ({\n  type: ActionTypes.SET_USERID,\n  userId\n});\n\nexport const connectGame = (playerName, playerAvatar, gameKey, type) => ({\n  type: ActionTypes.PLAYER_INFO,\n  playerName,\n  gameKey,\n  socket: {\n    command: 'CONNECT',\n    type,\n    payload: {\n      player: {\n        playerName,\n        playerAvatar\n      },\n      gameKey\n    }\n  }\n});\n\nexport const startGame = () => ({\n  type: ActionTypes.CREATOR_START_GAME,\n  socket: {\n    type: 'startGame',\n    payload: {\n      message: 'BE, start the game!'\n    }\n  }\n});\n\nexport const passDrawing = (drawing, act) => {\n  return {\n    type: ActionTypes.PASS_DRAWING,\n    socket: {\n      type: act,\n      payload: {\n        drawing\n      }\n    }\n  };\n};\n\nexport const restartGame = () => {\n  return {\n    type: ActionTypes.RESTART_GAME,\n    socket: {\n      type: 'restartGame',\n      payload: {\n        a: 42\n      }\n    }\n  };\n};\n","export const GET_KEY = 'GET_KEY'\nexport const SOCKET_CONNECT = 'SOCKET_CONNECT'\nexport const PLAYER_INFO = 'PLAYER_INFO'\nexport const SET_USERID = 'SET_USERID'\nexport const USER_AVATAR = 'USER_AVATAR'\nexport const SOCKET_MESSAGE = 'SOCKET_MESSAGE'\nexport const CREATOR_START_GAME = 'CREATOR_START_GAME'\nexport const PASS_DRAWING = 'PASS_DRAWING'\nexport const RESTART_GAME = 'RESTART_GAME'","const quickdrawSvgRender = (drawing, viewBoxWidth, viewBoxHeight) => {\n\n  const width = viewBoxWidth;\n  const height = viewBoxHeight;\n\n  let svg = '';\n  svg += ('<svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\"' + ` height=\"${height}\" width=\"${width}\" viewBox=\"0 0 ${height} ${width}\"` + '>')\n\n  drawing.forEach(function (loops) {\n    svg += ('<path d=\"')\n    svg += ('M ' + loops[0][0] + ' ' + loops[1][0])\n\n    for (let i = 1; i < loops[0].length; i++) {\n      svg += (' L ' + loops[0][i] + ' ' + loops[1][i])\n    }\n\n    svg += ('\" strokeWidth=\"3\" stroke=\"black\" fill=\"none\"></path>')\n  })\n\n  svg += ('</svg>')\n\n  return svg\n}\n\nexport default quickdrawSvgRender;","import styled from \"styled-components/macro\";\n\nconst GameWinner = styled.div`\n  &:before {\n    content: \"⭐️\";\n  }\n`;\n\nexport default GameWinner;\n","import styled, { css } from \"styled-components/macro\";\n\nconst PlayerList = styled.div`\n  align-items: flex-end;\n  justify-content: space-around;\n  display: flex;\n  width: 100%;\n\n  @media (min-width: 375px) {\n    max-width: 375px;\n  }\n\n  ${props =>\n    props.betweenRounds &&\n    css`\n      margin: 80px 0 20px 0;\n    `};\n`;\n\nexport default PlayerList;\n","export default {\n  avatarStyle: [\"Circle\"],\n  topType: [\n    \"NoHair\",\n    \"Eyepatch\",\n    \"Hat\",\n    \"Hijab\",\n    \"Turban\",\n    \"WinterHat1\",\n    \"WinterHat2\",\n    \"WinterHat3\",\n    \"WinterHat4\",\n    \"LongHairBigHair\",\n    \"LongHairBob\",\n    \"LongHairBun\",\n    \"LongHairCurly\",\n    \"LongHairCurvy\",\n    \"LongHairDreads\",\n    \"LongHairFrida\",\n    \"LongHairFro\",\n    \"LongHairFroBand\",\n    \"LongHairNotTooLong\",\n    \"LongHairShavedSides\",\n    \"LongHairMiaWallace\",\n    \"LongHairStraight\",\n    \"LongHairStraight2\",\n    \"LongHairStraightStrand\",\n    \"ShortHairDreads01\",\n    \"ShortHairDreads02\",\n    \"ShortHairFrizzle\",\n    \"ShortHairShaggyMullet\",\n    \"ShortHairShortCurly\",\n    \"ShortHairShortFlat\",\n    \"ShortHairShortRound\",\n    \"ShortHairShortWaved\",\n    \"ShortHairSides\",\n    \"ShortHairTheCaesar\",\n    \"ShortHairTheCaesarSidePart\"\n  ],\n  accessoriesType: [\n    \"Blank\",\n    \"Kurt\",\n    \"Prescription01\",\n    \"Prescription02\",\n    \"Round\",\n    \"Sunglasses\"\n  ],\n  hairColor: [\n    \"Auburn\",\n    \"Black\",\n    \"Blonde\",\n    \"BlondeGolden\",\n    \"Brown\",\n    \"BrownDark\",\n    \"PastelPink\",\n    \"Platinum\",\n    \"Red\",\n    \"SilverGray\"\n  ],\n  facialHairType: [\n    \"Blank\", // Added more blanks to balance out male vs female generation\n    \"Blank\",\n    \"Blank\",\n    \"Blank\",\n    \"Blank\",\n    \"Blank\",\n    \"BeardMedium\",\n    \"BeardLight\",\n    \"BeardMajestic\",\n    \"MoustacheFancy\",\n    \"MoustacheMagnum\"\n  ],\n  facialHairColor: [\n    \"Auburn\",\n    \"Black\",\n    \"Blonde\",\n    \"BlondeGolden\",\n    \"Brown\",\n    \"BrownDark\",\n    \"Platinum\",\n    \"Red\"\n  ],\n  clotheType: [\n    \"BlazerShirt\",\n    \"BlazerSweater\",\n    \"CollarSweater\",\n    \"GraphicShirt\",\n    \"Hoodie\",\n    \"Overall\",\n    \"ShirtCrewNeck\",\n    \"ShirtScoopNeck\"\n  ],\n  clotheColor: [\n    \"Black\",\n    \"Blue01\",\n    \"Blue02\",\n    \"Blue03\",\n    \"Gray01\",\n    \"Gray02\",\n    \"Heather\",\n    \"PastelBlue\",\n    \"PastelGreen\",\n    \"PastelOrange\",\n    \"PastelRed\",\n    \"PastelYellow\",\n    \"Pink\",\n    \"Red\",\n    \"White\"\n  ],\n  graphicType: [\n    \"Bat\",\n    \"Cumbia\",\n    \"Deer\",\n    \"Diamond\",\n    \"Hola\",\n    \"Pizza\",\n    \"Resist\",\n    \"Selena\",\n    \"Bear\",\n    \"SkullOutline\",\n    \"Skull\"\n  ],\n  eyeType: [\n    \"Close\",\n    \"Cry\",\n    \"Default\",\n    // \"Dizzy\",\n    \"EyeRoll\",\n    \"Happy\",\n    \"Hearts\",\n    \"Side\",\n    \"Squint\",\n    \"Surprised\",\n    \"Wink\",\n    \"WinkWacky\"\n  ],\n  eyebrowType: [\n    \"Angry\",\n    \"AngryNatural\",\n    \"Default\",\n    \"DefaultNatural\",\n    \"FlatNatural\",\n    \"RaisedExcited\",\n    \"RaisedExcitedNatural\",\n    \"SadConcerned\",\n    \"SadConcernedNatural\",\n    \"UnibrowNatural\",\n    \"UpDown\"\n  ],\n  mouthType: [\n    \"Concerned\",\n    \"Default\",\n    \"Disbelief\",\n    \"Eating\",\n    \"Grimace\",\n    \"Sad\",\n    \"ScreamOpen\",\n    \"Serious\",\n    \"Smile\",\n    \"Tongue\",\n    \"Twinkle\",\n    \"Vomit\"\n  ],\n  skinColor: [\n    \"Tanned\",\n    \"Yellow\",\n    \"Pale\",\n    \"Light\",\n    \"Brown\",\n    \"DarkBrown\",\n    \"Black\"\n  ]\n};\n","import options from \"./options.js\";\n\nfunction generateAvatarProps() {\n  return Object.keys(options).reduce((acc, key) => {\n    const id = Math.floor(Math.random() * (options[key].length - 1));\n    acc[key] = options[key][id];\n    return acc;\n  }, {});\n}\n\nexport default generateAvatarProps;\n","import React, { useEffect } from \"react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../redux/actions/index\";\n\n// Util imports\nimport generateAvatarProps from \"../utils/generateAvatarProps\";\n\n// Library imports\nimport Avatar from \"avataaars\";\n\nconst defaultSize = 74;\n\nconst PlayerAvatar = props => {\n  let localProps = generateAvatarProps();\n\n  useEffect(() => {\n    props.userAvatar(localProps);\n  }, [localProps]);\n\n  return !props.info ? (\n    <Avatar\n      style={{\n        width: `${props.size||defaultSize}px`,\n        height: `${props.size||defaultSize}px`\n      }}\n      {...localProps}\n    />\n  ) : (\n      <Avatar\n        style={{\n          width: `${props.size||defaultSize}px`,\n          height: `${props.size||defaultSize}px`\n        }}\n        {...props.info.playerAvatar}\n      />\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  userAvatar: avatar => dispatch(Actions.saveAvatar(avatar))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(PlayerAvatar);\n","import styled, { css } from \"styled-components/macro\";\n\nconst Wrapper = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.1);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: flex-start;\n  margin: 0 20vw 5vh 20vw;\n  min-height: 100vh;\n\n  text-align: center;\n\n  @media (max-width: 1024px) {\n    margin: 0 0 5vh 0;\n  }\n\n  ${props =>\n    props.ComponentsCatalogue &&\n    css`\n      align-items: flex-start;\n      padding: 0 5vw;\n      text-align: left;\n\n      .components {\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        border-radius: 3px;\n        margin-bottom: 5vh;\n        padding: 2vw;\n        padding-left: 5vw;\n        width: 100%;\n      }\n\n      .divider {\n        margin: 100px 0;\n        width: 100%;\n        border: 2px solid;\n        border-color: #764ad7;\n      }\n\n      h1 {\n        color: #472c81;\n        font-size: 3rem;\n      }\n      h2 {\n        color: #472c81;\n        font-size: 2.2rem;\n      }\n\n      .large {\n        font-size: 1.4rem;\n      }\n\n      h4 {\n        border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n        padding-bottom: 5px;\n      }\n    `};\n  ${props =>\n    props.GuessedCorrectly &&\n    css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n    `};\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nconst ResultsRoundBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 85%;\n  height: 100%;\n  cursor: pointer;\n  padding: 20px 8px;\n  background-color: #fff;\n  color: #472c81;\n  margin-bottom: 8px;\n  border-radius: 8px;\n  border-bottom: 2px solid #472c81;\n`;\n\nexport default ResultsRoundBar;","import styled from 'styled-components';\n\nconst DrawingWrapper = styled.div`\npadding: 5px 8px 20px 8px;\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\nwidth: 100%;\n`;\n\nexport default DrawingWrapper;","import React, { Fragment, useState, useEffect } from \"react\";\n\n//Animation\nimport posed from \"react-pose\";\nimport styled from \"styled-components\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../redux/actions/index\";\n\n// Component & Container Imports\nimport Button from \"../components/Button\";\nimport GameWinner from \"../components/GameWinner\";\nimport PlayerList from \"../components/PlayerList\";\nimport PlayerAvatar from \"../components/PlayerAvatar\";\nimport Wrapper from \"../components/Wrapper\";\nimport ResultsRoundBar from \"../components/ResultsRoundBar\";\nimport DrawingWrapper from \"../components/DrawingWrapper\";\n\n// tried moving this to separate component but it breaks\nconst Content = posed.div({\n  closed: { height: 0 },\n  open: { height: \"auto\" }\n});\n\n// leaving it here in case we need to apply styles\nconst DrawnImage = styled.img``;\nconst downArrow = <i className=\"fas fa-chevron-down\" />;\nconst rightArrow = <i className=\"fas fa-chevron-right\" />;\n//eslint-disable-next-line\nconst Results = ({ history, restartGame, game }) => {\n  const [open, setOpen] = useState(false);\n  const players = game.players;\n  const allRounds = game.rounds;\n  let obj = {}\n\n  allRounds\n    .map(round => round.winners)\n    .flat()\n    .forEach(winner => {\n      if (obj[winner]=== undefined) obj[winner]=1;\n      else obj[winner]++;\n    })\n\n  let score = Math.max(...Object.values(obj));\n  let winnerId = [];\n  for (let el in obj) {\n    if (obj[el] === score) winnerId.push(el);\n  }\n\n  useEffect(() => {\n    if (game.round === 0) history.push(\"/lobby\");\n  }, [game.round]);\n\n  const playAgain = () => {\n    restartGame();\n  };\n\n  return (\n    <Wrapper>\n      <PlayerList>\n        {players &&\n          Object.values(players).map((player, i) => (\n            <div key={i}>\n            <PlayerAvatar key={i} info={player} />\n            {winnerId.includes(player.playerId) && <GameWinner />}\n            </div>\n          ))}\n      </PlayerList>\n\n      <Fragment>\n        {allRounds.map((object, i) => (\n          <ResultsRoundBar\n            key={i}\n            onClick={() => setOpen(open === i ? false : i)}\n          >\n            <div>\n              {object.drawings && object.drawings[0].word.toUpperCase()}{\" \"}\n              {open === i ? downArrow : rightArrow}\n            </div>\n\n            <Content\n              className=\"content\"\n              pose={open === i ? \"open\" : \"closed\"}\n              style={{ overflow: \"hidden\", fontSize: \"18px\" }}\n            >\n              <DrawingWrapper>\n                {object.drawings &&\n                  object.drawings.map((drawing, i) => (\n                    <div key={i}>\n                      <SimpleSvg image={drawing.svg} />\n                      <div style={{display:\"flex\", flexDirection:\"column\", alignItems:\"center\"}}>\n                        <PlayerAvatar info={drawing} />\n                        <b>{drawing.playerName}</b> drew that!\n                      </div>\n                    </div>\n                  ))}\n              </DrawingWrapper>\n            </Content>\n          </ResultsRoundBar>\n        ))}\n      </Fragment>\n      <Button marginTop onClick={playAgain}>\n        Play Again\n      </Button>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  game: state.game\n});\n\nfunction SimpleSvg(props) {\n  const encodedImage = btoa(props.image);\n  const imageSrc = `data:image/svg+xml;base64,${encodedImage}`;\n  return <DrawnImage src={imageSrc} style={{ width: \"50%\", height: \"50%\" }} />;\n}\n\nconst mapDispatchToProps = dispatch => ({\n  restartGame: () => dispatch(Actions.restartGame())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Results);\n","import React, { useState, useRef, useEffect } from 'react';\n\n// Component & Container Imports\nimport Button from './Button';\nimport { connect } from 'react-redux';\nimport * as Actions from '../redux/actions/index';\n\n// to convert array into SVG string\nimport quickdrawSvgRender from '../utils/quickdrawSvgRender/quickdrawSvgRender';\nimport Results from '../containers/Results';\nimport { nextTick } from 'q';\n\n\nconst Canvas = ({ passDrawing, game, currentUser }) => {\n\n  // arol tip: useReducer instead of having this mess of variables here.\n  // arol tip #2: useReducer was just a cool way to handle this. But in order to fix this, it can be done with useState\n  let isDrawing = false;\n  let lastXCoordinate = 0;\n  let lastYCoordinate = 0;\n  const [drawing, setDrawing] = useState([]);\n  let xCoordinate = [];\n  let yCoordinate = [];\n  let timestamp = [];\n\n  const [locations, setLocations] = useState([]);\n  const [count, setCount] = useState(0);\n  const canvasRef = useRef(null);\n  const [googleGuess, setGoogleGuess] = useState('Draw something...');\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // canvas size\n    canvas.width = 375;\n    canvas.height = 375;\n    canvas.style.width = '375px';\n    canvas.style.height = '375px';\n\n    // canvas settings\n    ctx.strokeStyle = '#fff';\n    ctx.linecap = 'round';\n    ctx.lineWidth = 3;\n\n    const draw = e => {\n      if (!isDrawing) return;\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (e.x || e.y) {\n        xCoordinate.push(e.layerX);\n        yCoordinate.push(e.layerY);\n        timestamp.push(e.timeStamp);\n\n        ctx.beginPath();\n        ctx.moveTo(lastXCoordinate, lastYCoordinate);\n        ctx.lineTo(e.offsetX, e.offsetY);\n        ctx.stroke();\n\n        lastXCoordinate = e.offsetX;\n        lastYCoordinate = e.offsetY;\n\n      } else {\n\n        let touch = e.touches[0];\n        let x = touch.pageX - touch.target.offsetLeft;\n        let y = touch.pageY - touch.target.offsetTop;\n        xCoordinate.push(x);\n        yCoordinate.push(y);\n        timestamp.push(e.timeStamp);\n\n        ctx.beginPath();\n        ctx.moveTo(lastXCoordinate, lastYCoordinate);\n        ctx.lineTo(x, y);\n        ctx.stroke();\n\n        lastXCoordinate = x;\n        lastYCoordinate = y;\n      }\n    };\n\n    // eventlisteners: mouse\n    canvas.addEventListener('mousedown', e => {\n      isDrawing = true;\n      lastXCoordinate = e.offsetX;\n      lastYCoordinate = e.offsetY;\n    });\n    canvas.addEventListener(\"mousemove\", draw);\n    canvas.addEventListener(\"mouseup\", () => postDrawingHelper());\n    canvas.addEventListener(\"mouseout\", () => isDrawing = false);\n\n    // eventlisteners: touch\n    canvas.addEventListener('touchstart', e => {\n      isDrawing = true;\n      let touch = e.touches[0];\n\n      lastXCoordinate = touch.pageX - touch.target.offsetLeft;\n      lastYCoordinate = touch.pageY - touch.target.offsetTop;\n    });\n    canvas.addEventListener(\"touchmove\", draw);\n    canvas.addEventListener(\"touchend\", () => postDrawingHelper());\n\n    if (count > 0) {\n      // We already passed through here\n      if (game.endRound) {\n        // The round has finishe\n        const svg = quickdrawSvgRender(drawing, canvas.width, canvas.height);\n        passDrawing(svg, 'passFinalDrawing');\n        setCount(0);\n      }\n    }\n    setCount(1);\n  }, [game.endRound]);\n\n  useEffect(() => {\n    if (game.rounds && count > 0) {\n      let win = game.rounds.filter(round => {\n        return round.roundNum === game.round\n      })\n      .map(el => el.winners)\n      if (win.flat().includes(currentUser.userId)) {\n        const svg = quickdrawSvgRender(drawing, 375, 375);\n        passDrawing(svg, 'passFinalDrawing');\n        setCount(0);\n    }\n    setCount(1)\n  }\n}, [game.rounds]);\n\n  // helper function to post to API\n  const postDrawingHelper = () => {\n    isDrawing = false;\n\n    let xyCoordinates = [xCoordinate, yCoordinate, timestamp];\n    setDrawing(prev => {\n      const updatedDrawing = [...prev, xyCoordinates];\n      passDrawing(updatedDrawing, 'passDrawing');\n      return updatedDrawing;\n    });\n\n    xCoordinate = [];\n    yCoordinate = [];\n    timestamp = [];\n    xyCoordinates = [];\n  }\n\n  const handleCanvasClick = e => {\n    const newLocation = { x: e.clientX, y: e.clientY };\n    setLocations([...locations, newLocation]);\n  };\n\n  const handleClear = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setGoogleGuess(\"Draw something...\");\n    setLocations([]);\n    setDrawing([]);\n  };\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        onClick={handleCanvasClick}\n        style={{\n          border: \"1px solid rgba(255,255,255,1)\",\n          backgroundColor: \"#533497\"\n        }}\n      />\n      <Button clear onClick={handleClear}>\n        <i className=\"far fa-trash-alt\" />\n      </Button>\n      {googleGuess !== \"Draw something...\" ? (\n        <h4>\n          {googleGuess === \"Draw something...\" ? \"\" : \"Is it... \"}\n          {googleGuess === \"Draw something...\" ? \"\" : googleGuess}\n          {googleGuess === \"Draw something...\" ? \"\" : \"?\"}\n        </h4>\n      ) : null}\n\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  game: state.game,\n  currentUser: state.currentUser\n});\n\nconst mapDispatchToProps = { passDrawing: Actions.passDrawing }\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Canvas);\n","import styled from \"styled-components/macro\";\n\nconst DrawingStack = styled.div`\n  background-color: #472c81;\n  border-radius: 50%;\n  height: 300px;\n  width: 300px;\n  ${'' /* margin: 20px 0 -20px 0; */}\n`;\n\nexport default DrawingStack;\n","import styled from \"styled-components/macro\";\n\nconst Form = styled.form`\n  align-items: center;\n  background-color: rgba(71, 44, 129, 0.5);\n  display: flex;\n  flex-direction: column;\n  padding: 20px 20px 60px 20px;\n  width: 50%;\n  max-width: 375px;\n\n  @media (max-width: 1024px) {\n    width: 100%;\n  }\n`;\n\nexport default Form;\n","import styled from \"styled-components/macro\";\n\nconst FormLabel = styled.h3`\n  margin-bottom: 4vh;\n`;\n\nexport default FormLabel;\n","import styled, { css } from \"styled-components/macro\";\n\nconst GameHeader = styled.div`\n  align-items: center;\n  background-color: #533497;\n  color: white;\n  display: flex;\n  justify-content: space-around;\n  padding: 15px;\n  margin-top: 20px;\n  min-height: 84px;\n  border-radius: 50px;\n  width: 95%;\n\n  ${props =>\n    props.timer &&\n    css`\n      justify-content: flex-start;\n      padding: 1vh 4vw;\n      min-height: 0;\n    `}\n\n  ${props =>\n    props.inGame &&\n    css`\n      justify-content: center;\n      align-items: center;\n      min-height: 0;\n      padding: 0;\n    `}\n`;\n\nexport default GameHeader;\n","import styled, { css } from \"styled-components/macro\";\n\nconst GameName = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 3px;\n  color: #472c81;\n  display: flex;\n  font-size: 1.4rem;\n  font-weight: bold;\n  justify-content: center;\n  min-height: 40px;\n  width: 100%;\n\n  ${props =>\n    props.timer &&\n    css`\n      width: 25%\n      font-size: 1rem;\n    `}\n\n  ${props =>\n    props.betweenRounds &&\n    css`\n      width: 100%;\n    `}\n`;\n\nexport default GameName;\n","import styled from \"styled-components/macro\";\n\nconst ImageCarousel = styled.div`\n  align-items: center;\n  overflow: hidden;\n  overflow-y: scroll;\n  text-align: center;\n  width: 800px;\n  height: 400px;\n  border: 1px solid white;\n  background-color: white;\n`;\n\nexport default ImageCarousel;\n","import styled from \"styled-components/macro\";\n\nconst InputField = styled.input`\n  background-color: rgba(255, 255, 255, 0.2);\n  border: 0;\n  border-radius: 50px;\n  color: #fff;\n  font-size: 1.2rem;\n  font-weight: bold;\n  height: 50px;\n  outline: none;\n  padding-left: 20px;\n  width: 100%;\n\n  &:active,\n  &:focus {\n    border: 1px solid rgba(255, 255, 255, 0.4);\n    box-shadow: 0px 0px 5px 0px rgba(255, 255, 255, 0.4);\n  }\n`;\n\nexport default InputField;\n","import styled from \"styled-components/macro\";\n\nconst NavBar = styled.nav`\n  align-items: center;\n  background: #472c81;\n  box-shadow: 0px 0px 10px 1px rgba(255, 255, 255, 0.2);\n  box-sizing: none;\n  color: white;\n  display: flex;\n  height: 40px;\n  justify-content: space-between;\n  padding: 0.5em 1em;\n  width: 100%;\n\n  .logo {\n    font-size: 1rem;\n    letter-spacing: 2px;\n    padding-top: 5px;\n    text-transform: uppercase;\n    width: 50%;\n  }\n  .nav-content {\n    text-align: right;\n    width: 50%;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0 20vw;\n\n    .logo {\n      font-size: 1.8rem;\n    }\n  }\n`;\n\nexport default NavBar;\n","import styled from \"styled-components/macro\";\n\nconst PlayerHasSolvedRound = styled.div`\n  &:before {\n    content: \"✅\";\n  }\n`;\n\nexport default PlayerHasSolvedRound;\n","const generatePicRotateDegree = () => {\n  let number = Math.floor(Math.random() * 3);\n  let posOrNegGenerator = ~~(Math.random() * 2) ? -number : number;\n  return posOrNegGenerator;\n};\n\nexport default generatePicRotateDegree;\n","import React, {useState, useEffect} from 'react';\nimport styled from \"styled-components/macro\";\nimport posed from 'react-pose';\n\n// Utils import\nimport generatePicRotateDegree from \"../utils/generatePicRotateDegree\";\n\nconst Box = posed.div({\n  hidden: {\n    opacity: 0,\n    scale: 1.1,\n    rotate: () => (Math.random() * 45) * (Math.random() > .5 ? 1 : -1)\n  },\n  visible: {\n    opacity: 1,\n    scale: .6,\n    rotate: () => (Math.random() * 5) * (Math.random() > .5 ? 1 : -1)\n  }\n})\n\nconst Polaroid = (props) => {\n  const [pose, setPose] = useState('hidden');\n  useEffect(() => {\n    setTimeout(() => {setPose('visible')}, props.delay);\n  }, [])\n  return (\n    <Box className={props.className} pose={pose}>\n      {props.children}\n    </Box>\n  )\n}\n\n\nconst rotationDegree = `rotate(${generatePicRotateDegree()}deg)`;\n\nconst PolaroidPicBackground = styled(Polaroid)`\n  position: absolute;\n  background-color: rgba(255, 255, 255, 1);\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  box-shadow: 0px 0px 51px 3px rgba(0, 0, 0, 0.2);\n  transform: ${rotationDegree} scale(0.8);\n  transform-origin: center;\n  transition: 75ms linear all;\n  &:hover {\n    transform: rotate(1deg) scale(0.8);\n  };\n  margin-top: -73px;\n  margin-left: -37px;\n  color: black;\n`;\n\nexport default PolaroidPicBackground;\n","import styled from \"styled-components/macro\";\n\nconst SingleDrawing = styled.div`\n  background-color: #472c81;\n  border-radius: 50%;\n  height: 400px;\n  width: 400px;\n  padding: 5vw;\n  transform: scale(0.7);\n`;\n\nexport default SingleDrawing;\n","import styled, { css } from \"styled-components/macro\";\n\nconst SpeechBubble = styled.span`\n  animation: float 5s;\n  animation-delay: 0.2s;\n  animation-iteration-count: infinite;\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 50px;\n  color: #472c81;\n  font-size: 0.8rem;\n  padding: 5px 20px;\n  position: relative;\n  margin-left: 160px;\n  z-index: 9999;\n\n  &:after {\n    border: 20px solid transparent;\n    border-left: 0;\n    border-bottom: 0;\n    border-top-color: rgba(255, 255, 255, 0.5);\n    bottom: 0;\n    content: \"\";\n    height: 0;\n    right: 60%;\n    margin-left: -20px;\n    margin-bottom: -20px;\n    position: absolute;\n    width: 0;\n  }\n\n  @keyframes float {\n    0% {\n      box-shadow: 0 5px 15px 0px rgba(0, 0, 0, 0.3);\n      transform: translate(0px) rotate(20deg);\n    }\n    50% {\n      box-shadow: 0 15px 15px 0px rgba(0, 0, 0, 0.1);\n      transform: translate(-2px, -2px) rotate(17deg);\n    }\n    100% {\n      box-shadow: 0 5px 15px 0px rgba(0, 0, 0, 0.3);\n      transform: translate(0px) rotate(20deg);\n    }\n  }\n\n  ${props =>\n    props.inGame &&\n    css`\n      background-color: #472c81;\n      color: #fff;\n\n      &:after {\n        border-top-color: #472c81;\n        margin-left: 20px;\n      }\n    `};\n\n  ${props =>\n    props.zorbThinking &&\n    css`\n      animation: none;\n      background-color: #472c81;\n      color: #fff;\n      height: 30px;\n      margin-left: 0;\n      font-size: 1.2rem;\n      padding: 5px 10px;\n      height: 60px;\n\n      &:after {\n        border-top-color: #472c81;\n        margin-left: 20px;\n        right: 40%;\n        margin-left: 0;\n      }\n\n      @keyframes float {\n        0% {\n          box-shadow: 0 5px 15px 0px rgba(0, 0, 0, 0.3);\n          transform: translate(0px) rotate(2deg);\n        }\n        50% {\n          box-shadow: 0 15px 15px 0px rgba(0, 0, 0, 0.1);\n          transform: translate(-2px, -2px) rotate(0deg);\n        }\n        100% {\n          box-shadow: 0 5px 15px 0px rgba(0, 0, 0, 0.3);\n          transform: translate(0px) rotate(2deg);\n        }\n      }\n    `};\n`;\n\nexport default SpeechBubble;\n","import React from \"react\";\n\nconst TestVG = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 375 375\"\n    >\n      <path\n        d=\"M 113 325L 113 319L 113 313L 114 308L 114 301L 114 291L 114 280L 114 267L 114 254L 114 242L 113 232L 112 222L 112 212L 112 202L 112 195L 112 189L 112 185L 112 182L 112 181L 113 180L 114 180L 117 180L 120 180L 125 180L 131 180L 139 180L 149 180L 160 180L 173 180L 185 179L 197 178L 210 177L 219 177L 229 177L 237 177L 244 177L 250 178L 255 181L 259 184L 261 187L 263 192L 263 200L 263 209L 263 218L 262 230L 260 243L 260 256L 260 271L 260 284L 260 298L 260 307L 260 317L 260 322L 260 326L 260 327L 260 328L 253 328L 243 328L 232 328L 222 327L 209 326L 197 325L 188 325L 178 325L 168 325L 157 325L 146 325L 136 325L 129 325L 123 325L 121 325L 112 173L 116 168L 123 160L 133 148L 145 136L 157 122L 170 110L 179 101L 188 91L 195 85L 199 82L 203 79L 206 77L 208 76L 209 76L 210 77L 212 78L 215 82L 217 86L 220 93L 224 102L 226 111L 230 123L 233 136L 237 148L 241 160L 245 169L 246 174L 248 179L 248 182L 154 310L 154 305L 154 299L 154 291L 154 285L 154 278L 154 272L 156 264L 159 258L 162 252L 167 246L 172 240L 178 235L 182 232L 187 231L 190 231L 193 231L 195 235L 196 241L 197 250L 197 259L 197 269L 197 276L 196 282L 195 288L 194 292L 194 295L 194 296L 194 297L 194 298L 194 300\"\n        strokeWidth=\"3\"\n        stroke=\"black\"\n        fill=\"none\"\n      />\n    </svg>\n  );\n};\n\nexport default TestVG;\n","import styled, { css } from \"styled-components/macro\";\n\nconst WordToDraw = styled.div`\n  color: white;\n  margin: 20px 0;\n  p {\n    margin: 0;\n  }\n  h3 {\n    text-transform: uppercase;\n    font-weight: bold;\n    margin-bottom: 0;\n  }\n\n  ${props =>\n    props.inBetween &&\n    css`\n      width: 95%;\n      padding: 10px;\n      background-color: #472c81;\n      border-radius: 50px;\n      text-transform: uppercase;\n    `};\n`;\n\nexport default WordToDraw;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0 {\\n\\t\\tfill:#FFFFFF;\\n\\t\\tstroke:#FFFFFF;\\n\\t\\tstroke-width:8;\\n\\t\\tstroke-miterlimit:10;\\n\\t}\\n\\t.st1 {\\n\\t\\tfill:#FFFFFF;\\n\\t}\\n\");\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  className: \"robot levitate\"\n}, React.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M296.08,164.83\"\n}), React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M181.06,144.34h-66.63c-2.17,0-3.93-1.76-3.93-3.93v-3.26c0-2.17,1.76-3.93,3.93-3.93h66.63 c2.17,0,3.93,1.76,3.93,3.93v3.26C184.99,142.58,183.23,144.34,181.06,144.34z\"\n}), React.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  className: \"st1 leftLeg\",\n  d: \"M125.28,345.92H112.7c-3.58,0-6.49-2.91-6.49-6.49v-45.4c0-3.58,2.91-6.49,6.49-6.49h12.58 c3.58,0,6.49,2.9,6.49,6.49v45.4C131.76,343.02,128.86,345.92,125.28,345.92z\"\n}), React.createElement(\"path\", {\n  className: \"st1 leftFoot\",\n  d: \"M104.66,374.16l7.53,7.53c3.76,3.76,9.85,3.76,13.61,0l7.53-7.53c3.76-3.76,3.76-9.85,0-13.61l-7.53-7.53 c-3.76-3.76-9.85-3.76-13.61,0l-7.53,7.53C100.9,364.31,100.9,370.4,104.66,374.16z\"\n})), React.createElement(\"g\", null, React.createElement(\"path\", {\n  className: \"st1 rightLeg\",\n  d: \"M182.79,345.92h-12.58c-3.58,0-6.49-2.91-6.49-6.49v-45.4c0-3.58,2.91-6.49,6.49-6.49h12.58 c3.58,0,6.49,2.9,6.49,6.49v45.4C189.28,343.02,186.38,345.92,182.79,345.92z\"\n}), React.createElement(\"path\", {\n  className: \"st1 rightFoot\",\n  d: \"M162.17,372.87l7.53,7.53c3.76,3.76,9.85,3.76,13.61,0l7.53-7.53c3.76-3.76,3.76-9.85,0-13.61l-7.53-7.53 c-3.76-3.76-9.85-3.76-13.61,0l-7.53,7.53C158.41,363.01,158.41,369.11,162.17,372.87z\"\n}))), React.createElement(\"path\", {\n  className: \"st1 torso\",\n  d: \"M210.67,281.78H84.82c-7.28,0-13.19-5.9-13.19-13.19V163.57c0-7.28,5.9-13.19,13.19-13.19h125.85 c7.28,0,13.19,5.9,13.19,13.19v105.02C223.86,275.87,217.95,281.78,210.67,281.78z\"\n}), React.createElement(\"path\", {\n  className: \"st1 rightArm\",\n  d: \"M279.91,269.08l-7.44,3.22c-4.82,2.08-10.41-0.13-12.49-4.94l-30.99-71.57c-2.08-4.82,0.13-10.41,4.94-12.49 l7.44-3.22c4.82-2.08,10.41,0.13,12.49,4.94l30.99,71.57C286.94,261.4,284.73,266.99,279.91,269.08z\"\n}), React.createElement(\"path\", {\n  className: \"st1 leftArm\",\n  d: \"M28.16,273.89l-7.63-2.73c-4.94-1.77-7.51-7.21-5.75-12.15l26.27-73.43c1.77-4.94,7.21-7.51,12.15-5.75 l7.63,2.73c4.94,1.77,7.51,7.21,5.75,12.15l-26.27,73.43C38.54,273.09,33.1,275.66,28.16,273.89z\"\n}), React.createElement(\"g\", {\n  className: \"rightFingers\"\n}, React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M275.86,260.76L275.86,260.76c-1.64,2.4-1.02,5.67,1.37,7.31l13.87,9.48c2.4,1.64,5.67,1.02,7.31-1.37l0,0 c1.64-2.4,1.02-5.67-1.37-7.31l-13.87-9.48C280.77,257.75,277.5,258.37,275.86,260.76z\"\n}), React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M271.18,262.79L271.18,262.79c-2.9,0-5.26,2.35-5.26,5.26v16.8c0,2.9,2.35,5.26,5.26,5.26l0,0 c2.9,0,5.26-2.35,5.26-5.26v-16.8C276.44,265.14,274.09,262.79,271.18,262.79z\"\n})), React.createElement(\"g\", {\n  className: \"leftFingers\"\n}, React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M28.21,268.21L28.21,268.21c-2.9-0.14-5.36,2.11-5.5,5.01l-0.78,16.78c-0.14,2.9,2.11,5.36,5.01,5.5h0 c2.9,0.14,5.36-2.11,5.5-5.01l0.78-16.78C33.35,270.8,31.11,268.34,28.21,268.21z\"\n}), React.createElement(\"path\", {\n  className: \"st1\",\n  d: \"M24.03,265.29L24.03,265.29c-1.52-2.47-4.76-3.24-7.23-1.71l-14.3,8.82c-2.47,1.52-3.24,4.76-1.71,7.23h0 c1.52,2.47,4.76,3.24,7.23,1.71l14.3-8.82C24.78,271,25.55,267.76,24.03,265.29z\"\n})), React.createElement(\"path\", {\n  className: \"st1 head\",\n  d: \"M239.83,41.63H55.66c-9.44,0-17.1,7.66-17.1,17.1v51.95c0,9.44,7.66,17.1,17.1,17.1h184.16 c9.44,0,17.1-7.66,17.1-17.1V58.73C256.92,49.28,249.27,41.63,239.83,41.63z M100.58,97.48c-7.06,0-12.78-5.72-12.78-12.78 s5.72-12.78,12.78-12.78c7.06,0,12.78,5.72,12.78,12.78S107.63,97.48,100.58,97.48z M148.33,103.53c-10.4,0-18.83-8.43-18.83-18.83 s8.43-18.83,18.83-18.83s18.83,8.43,18.83,18.83S158.73,103.53,148.33,103.53z M194.91,97.48c-7.06,0-12.78-5.72-12.78-12.78 s5.72-12.78,12.78-12.78c7.06,0,12.78,5.72,12.78,12.78S201.97,97.48,194.91,97.48z\"\n}), React.createElement(\"ellipse\", {\n  transform: \"matrix(0.2773 -0.9608 0.9608 0.2773 6.834 209.5192)\",\n  className: \"st1\",\n  cx: 200,\n  cy: 27.1,\n  rx: 8.14,\n  ry: 28.1\n}), React.createElement(\"ellipse\", {\n  transform: \"matrix(0.2773 -0.9608 0.9608 0.2773 6.834 209.5192)\",\n  className: \"st1\",\n  cx: 200,\n  cy: 27.1,\n  rx: 28.1,\n  ry: 8.14\n}));\n\nvar SvgZorb = function SvgZorb(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"-20 -20 340 420\",\n    style: {\n      enableBackground: \"new 0 0 299.33 384.51\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgZorb, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Zorb.6dc49d5a.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { ReactComponent as ZorbSVG } from \"./Zorb.svg\";\n\nconst Zorb = () => {\n  return <ZorbSVG />;\n};\n\nexport default Zorb;\n","import React from \"react\";\n\n// Redux Imports\n\n// Component & Container Imports\nimport ArtistDetails from \"../components/ArtistDetails\";\nimport AvatarContainer from \"../components/AvatarContainer\";\nimport AvatarShelf from \"../components/AvatarShelf\";\nimport Button from \"../components/Button\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport Canvas from \"../components/Canvas\";\nimport DrawingStack from \"../components/DrawingStack\";\nimport Form from \"../components/Form\";\nimport FormLabel from \"../components/FormLabel\";\nimport GameHeader from \"../components/GameHeader\";\nimport GameName from \"../components/GameName\";\nimport GameWinner from \"../components/GameWinner\";\nimport ImageCarousel from \"../components/ImageCarousel\";\nimport InputField from \"../components/InputField\";\nimport NavBar from \"../components/NavBar\";\nimport PlayerAvatar from \"../components/PlayerAvatar\";\nimport PlayerHasSolvedRound from \"../components/PlayerHasSolvedRound\";\nimport PlayerList from \"../components/PlayerList\";\nimport PolaroidPicBackground from \"../components/PolaroidPicBackground\";\nimport SingleDrawing from \"../components/SingleDrawing\";\nimport SpeechBubble from \"../components/SpeechBubble\";\nimport TestVG from \"../components/TestVG\";\nimport WordToDraw from \"../components/WordToDraw\";\nimport Wrapper from \"../components/Wrapper\";\nimport Zorb from \"../components/Zorb\";\n\nexport const ComponentsCatalogue = () => {\n  return (\n    <>\n      <Wrapper ComponentsCatalogue>\n        <h1>Components Catalogue</h1>\n        <p className=\"large\">\n          This catalogue showcases all of the created components within this\n          application. It is grouped by core application screens.\n        </p>\n\n        <h2>Generic Components</h2>\n        <ul className=\"components\">\n          <li>Button (Default)</li>\n          <li>Button (Primary)</li>\n          <li>Button (Gradient)</li>\n          <li>NavBar</li>\n        </ul>\n\n        <h3>Buttons</h3>\n        <div>\n          <Button>default</Button>\n          <Button primary>primary</Button>\n          <Button gradient>Gradient</Button>\n        </div>\n        <h3>NavBar</h3>\n        <NavBar>Text on Navbar</NavBar>\n        <hr className=\"divider\" />\n        <h2>Screen: Main (Home)</h2>\n        <h4>Components Used</h4>\n        <ul className=\"components\">\n          <li>Wrapper</li>\n          <li>BUGY</li>\n          <li>Button</li>\n        </ul>\n        <div>\n          <Zorb />\n          <p>\n            You draw, BUGY guesses. You have only 20 seconds per round to show\n            off your artistic skills. Can BUGY understand what you are trying to\n            draw? Let&apos;s get started!\n          </p>\n\n          <div>\n            <Button primary>Create</Button>\n\n            <Button>Join</Button>\n          </div>\n        </div>\n\n        <hr className=\"divider\" />\n\n        <h2>Screen: Create</h2>\n        <h4>Components Used</h4>\n        <ul className=\"components\">\n          <li>Form</li>\n          <li>SpeechBubble</li>\n          <li>AvatarContainer</li>\n          <li>PlayerAvatar</li>\n          <li>FormLabel</li>\n          <li>InputField</li>\n          <li>GameName</li>\n          <li>ButtonContainer</li>\n          <li>Button</li>\n        </ul>\n        <Form>\n          <FormLabel>Your Avatar</FormLabel>\n          <SpeechBubble>Looking good!</SpeechBubble>\n          <AvatarContainer>\n            <PlayerAvatar />\n          </AvatarContainer>\n          <FormLabel>Name</FormLabel>\n          <InputField type=\"text\" />\n\n          <FormLabel>Game ID</FormLabel>\n          <GameName>Game Name</GameName>\n\n          <ButtonContainer>\n            <Button primary marginTop formButton type=\"submit\">\n              Create\n            </Button>\n          </ButtonContainer>\n        </Form>\n        <Button back marginBottom>\n          Back\n        </Button>\n\n        <hr className=\"divider\" />\n\n        <h2>Screen: Join</h2>\n        <h4>Components Used</h4>\n        <ul className=\"components\">\n          <li>Form</li>\n          <li>FormLabel</li>\n          <li>SpeechBubble</li>\n          <li>AvatarContainer</li>\n          <li>PlayerAvatar</li>\n          <li>InputField</li>\n          <li>ButtonContainer</li>\n          <li>Button</li>\n        </ul>\n        <Form>\n          <FormLabel>Your Avatar</FormLabel>\n          <SpeechBubble>Looking good!</SpeechBubble>\n          <AvatarContainer>\n            <PlayerAvatar />\n          </AvatarContainer>\n          <FormLabel>Name</FormLabel>\n          <InputField type=\"text\" />\n\n          <FormLabel>Enter Game ID</FormLabel>\n          <InputField type=\"text\" />\n\n          <ButtonContainer>\n            <Button primary marginTop formButton type=\"submit\">\n              Join\n            </Button>\n          </ButtonContainer>\n        </Form>\n        <Button back marginBottom>\n          Back\n        </Button>\n\n        <hr className=\"divider\" />\n\n        <h2>Screen: Lobby</h2>\n        <h4>Components Used</h4>\n        <ul className=\"components\">\n          <li>GameHeader</li>\n          <li>GameName</li>\n          <li>Button</li>\n          <li>Canvas</li>\n          <li>Canvas Footer</li>\n          <li>PlayerList</li>\n          <li>AvatarShelf</li>\n        </ul>\n        <GameHeader>\n          <GameName lobby>Wild-Winter</GameName>\n          <Button primary>Start!</Button>\n        </GameHeader>\n\n        <Canvas />\n        <PlayerList>\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n        </PlayerList>\n        <AvatarShelf>Your Opponents</AvatarShelf>\n\n        <hr className=\"divider\" />\n\n        <h2>Screen: Game</h2>\n        <h4>Components Used</h4>\n        <ul className=\"components\">\n          <li>GameHeader</li>\n          <li>GameName</li>\n          <li>WordToDraw</li>\n          <li>Canvas</li>\n          <li>PlayerList</li>\n\n          <li>AvatarShelf</li>\n        </ul>\n        <GameHeader timer>\n          <GameName timer>00:20</GameName>\n          <WordToDraw>\n            Drawing: <strong>Hurricane</strong>\n          </WordToDraw>\n        </GameHeader>\n\n        <Canvas />\n        <PlayerList game>\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n        </PlayerList>\n        <AvatarShelf>Your Opponents</AvatarShelf>\n\n        <hr className=\"divider\" />\n\n        <h2>Screen: Between Rounds</h2>\n        <h4>Components Used</h4>\n        <ul className=\"components\">\n          <li>GameHeader</li>\n          <li>GameName</li>\n          <li>WordToDraw</li>\n          <li>DrawingStack</li>\n          <li>SingleDrawing</li>\n          <li>PolaroidPicBackground</li>\n          <li>TestVG</li>\n          <li>ArtistDetails</li>\n          <li>SpeechBubble</li>\n          <li>PlayerAvatar</li>\n          <li>PlayerList</li>\n          <li>AvatarShelf</li>\n        </ul>\n        <GameHeader timer>\n          <GameName timer betweenRounds>\n            Next Round... 00:04\n          </GameName>\n          <WordToDraw>\n            Drawing: <strong>Hurricane</strong>\n          </WordToDraw>\n        </GameHeader>\n        <DrawingStack>\n          <SingleDrawing>\n            <PolaroidPicBackground>\n              <TestVG />\n            </PolaroidPicBackground>\n            <ArtistDetails scaled>\n              <SpeechBubble inGame>I drew that!</SpeechBubble>\n              <PlayerAvatar />\n            </ArtistDetails>\n          </SingleDrawing>\n        </DrawingStack>\n\n        <PlayerList betweenRounds>\n          <PlayerHasSolvedRound />\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n        </PlayerList>\n        <AvatarShelf>Your Opponents</AvatarShelf>\n\n        <hr className=\"divider\" />\n\n        <h2>Screen: Results</h2>\n        <h4>Components Used</h4>\n        <ul className=\"components\">\n          <li>Button</li>\n          <li>GameWinner</li>\n          <li>ImageCarousel</li>\n          <li>PlayerList</li>\n\n          <li>PlayerAvatar</li>\n          <li>SingleDrawing</li>\n          <li>TestVG</li>\n        </ul>\n        <PlayerList>\n          <GameWinner />\n          <PlayerAvatar />\n\n          <PlayerAvatar />\n        </PlayerList>\n        <ImageCarousel>\n          <SingleDrawing>\n            <TestVG />\n            <p>Username: Lulu</p>\n          </SingleDrawing>\n          <SingleDrawing>\n            <TestVG />\n            <p>Username: Lala</p>\n          </SingleDrawing>\n          <SingleDrawing>\n            <TestVG />\n            <p>Username: Lili</p>\n          </SingleDrawing>\n          <SingleDrawing>\n            <TestVG />\n            <p>Username: Lolo</p>\n          </SingleDrawing>\n          <SingleDrawing>\n            <TestVG />\n            <p>Username: Lyly</p>\n          </SingleDrawing>\n        </ImageCarousel>\n        <Button>Play Again</Button>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ComponentsCatalogue;\n","import styled from \"styled-components/macro\";\n\nconst GameID = styled.h2`\n  margin: 0;\n`;\n\nexport default GameID;\n","import React, { useState } from \"react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../redux/actions/index\";\n\n// Component & Container Imports\nimport AvatarContainer from \"../components/AvatarContainer\";\nimport Button from \"../components/Button\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport Form from \"../components/Form\";\nimport FormLabel from \"../components/FormLabel\";\nimport GameID from \"../components/GameID\";\nimport InputField from \"../components/InputField\";\nimport PlayerAvatar from \"../components/PlayerAvatar\";\nimport SpeechBubble from \"../components/SpeechBubble\";\nimport Wrapper from \"../components/Wrapper\";\n\n// Util imports\nimport generateAvatarProps from \"../utils/generateAvatarProps\";\n\nconst Create = props => {\n  const [playerName, setPlayerName] = useState(\"\");\n  const [userChoice, setUserChoice] = useState(\"\");\n\n  const handlePlayerName = event => {\n    const value = event.target.value;\n    setPlayerName(value);\n  };\n\n  const submitName = e => {\n    e.preventDefault();\n\n    props.connectGame(\n      playerName,\n      props.userAvatar,\n      props.gameKey,\n      \"createGame\"\n    );\n    props.history.push(\"/lobby\");\n  };\n\n  const goBack = () => {\n    props.history.goBack();\n  };\n\n  const refreshAvatar = e => {\n    e.preventDefault();\n    let props = generateAvatarProps();\n    setUserChoice(props);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={submitName}>\n        <FormLabel>Choose your look</FormLabel>\n        <SpeechBubble inGame>Looking good!</SpeechBubble>\n        <div>\n          <AvatarContainer\n            style={{ transform: \"scale(2.5)\", marginTop: \"2vh\" }}\n          >\n            <PlayerAvatar userChoice={userChoice} />\n          </AvatarContainer>\n        </div>\n        <Button refresh type=\"\" onClick={refreshAvatar}>\n          <i className=\"fas fa-sync-alt\" />\n        </Button>\n        <FormLabel>What`s your name?</FormLabel>\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          onChange={handlePlayerName}\n          required\n          maxLength=\"28\"\n        />\n\n        <FormLabel>Game ID:</FormLabel>\n        <GameID>{props.loading ? \"Loading...\" : props.gameKey}</GameID>\n\n        <ButtonContainer>\n          <Button primary formButton type=\"submit\">\n            Create\n          </Button>\n          <p className=\"small lightweight\">or</p>\n          <Button back marginBottom type=\"button\" onClick={goBack}>\n            Back\n          </Button>\n        </ButtonContainer>\n      </Form>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  userAvatar: state.currentUser.userAvatar,\n  gameKey: state.pages.create.gameKey,\n  loading: state.pages.create.loading\n});\n\nconst mapDispatchToProps = { connectGame: Actions.connectGame };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Create);\n","import React, { useState, useEffect, useRef } from \"react\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../redux/actions/index\";\n\n// Component & Container Imports\nimport AvatarContainer from \"../components/AvatarContainer\";\nimport Button from \"../components/Button\";\nimport ButtonContainer from \"../components/ButtonContainer\";\nimport Form from \"../components/Form\";\nimport FormLabel from \"../components/FormLabel\";\nimport InputField from \"../components/InputField\";\nimport PlayerAvatar from \"../components/PlayerAvatar\";\nimport SpeechBubble from \"../components/SpeechBubble\";\nimport Wrapper from \"../components/Wrapper\";\n\n// Util imports\nimport generateAvatarProps from \"../utils/generateAvatarProps\";\n\nconst Join = ({ game, pages, connectGame, history, currentUser }) => {\n  const [playerName, setPlayerName] = useState(\"\");\n  const [gameKey, setGameKey] = useState(\"\");\n  const [userChoice, setUserChoice] = useState(\"\");\n  const joinForm = useRef();\n  const gameKeyInput = useRef();\n\n  useEffect(() => {\n    if (game.players) history.push(\"/lobby\");\n  }, [game]);\n\n  useEffect(() => {\n    if (pages.join.error) {\n      gameKeyInput.current.setCustomValidity(\"Game code does not exist\");\n      gameKeyInput.current.reportValidity();\n    }\n  }, [pages.join]);\n\n  const handlePlayerName = event => {\n    const value = event.target.value;\n    setPlayerName(value);\n  };\n\n  const handleGameName = event => {\n    const value = event.target.value;\n    setGameKey(value);\n    gameKeyInput.current.setCustomValidity(\"\");\n  };\n\n  const submitAndConnect = e => {\n    e.preventDefault();\n    connectGame(playerName, currentUser.userAvatar, gameKey, \"joinGame\");\n  };\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const refreshAvatar = e => {\n    e.preventDefault();\n    let props = generateAvatarProps();\n    setUserChoice(props);\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={submitAndConnect} ref={joinForm}>\n        <FormLabel>Your Avatar</FormLabel>\n        <SpeechBubble inGame>Looking good!</SpeechBubble>\n        <div>\n          <AvatarContainer\n            style={{ transform: \"scale(2.5)\", marginTop: \"2vh\" }}\n          >\n            <PlayerAvatar userChoice={userChoice} />\n          </AvatarContainer>\n        </div>\n        <Button refresh onClick={refreshAvatar}>\n          <i className=\"fas fa-sync-alt\" />\n        </Button>\n        <FormLabel>Name</FormLabel>\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          onChange={handlePlayerName}\n          required\n          maxLengthf=\"28\"\n        />\n\n        <FormLabel>Enter Game ID:</FormLabel>\n        <InputField\n          type=\"text\"\n          name=\"gameName\"\n          onChange={handleGameName}\n          ref={gameKeyInput}\n          required\n        />\n\n        <ButtonContainer>\n          <Button primary formButton type=\"submit\">\n            Join\n          </Button>\n          <p className=\"small lightweight\">or</p>\n          <Button back marginBottom type=\"button\" onClick={goBack}>\n            Back\n          </Button>\n        </ButtonContainer>\n      </Form>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(\"STATE\", state);\n  return {\n    game: state.game,\n    pages: state.pages,\n    currentUser: state.currentUser\n  };\n};\n\nconst mapDispatchToProps = { connectGame: Actions.connectGame };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Join);\n","import styled from \"styled-components/macro\";\n\nconst LobbyWaiting = styled.div`\n  margin-top: -10px;\n  margin-bottom: 15px;\n\n  p {\n    margin: 0;\n  }\n  /* \n  @media (max-width: 1024px) {\n    margin-top: 0;\n    margin-bottom: 10px;\n  } */\n`;\n\nexport default LobbyWaiting;\n","const DeviceDetector = {\n  userAgent: () => navigator.userAgent || navigator.vendor || window.opera,\n  isIOS: function() {\n    return /iPad|iPhone|iPod/.test(this.userAgent()) && !window.MSStream;\n  },\n  isAndroid: function() {\n    return /android/i.test(this.userAgent());\n  }\n};\n\nexport default DeviceDetector;\n","import React, {useEffect} from \"react\";\nimport styled from \"styled-components/macro\";\n\nimport posed, {PoseGroup} from 'react-pose';\n\n// Redux Imports\nimport {connect} from \"react-redux\";\nimport * as Actions from \"../redux/actions/index\";\n\n// Component & Container Imports\nimport Button from \"../components/Button\";\nimport Canvas from \"../components/Canvas\";\nimport GameHeader from \"../components/GameHeader\";\nimport LobbyWaiting from \"../components/LobbyWaiting\";\nimport PlayerAvatar from \"../components/PlayerAvatar\";\n// import PlayerEmptySlot from \"../components/PlayerEmptySlot\";\nimport PlayerList from \"../components/PlayerList\";\nimport Wrapper from \"../components/Wrapper\";\nimport DeviceDetector from \"../utils/deviceDetector\";\n\nconst host = window.location.protocol + \"//\" + window.location.host;\n\nconst Player = posed.div({\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      scale: {\n        type: 'spring',\n        stiffness: 500\n      }\n    }\n  },\n  exit: {\n    scale: 0.3,\n    opacity: 0\n  }\n})\n\nconst ShareIcon = styled.i`\n  margin-top: 20px;\n  font-size: 2em;\n`;\n\nconst ShareButton = ({url}) => {\n  if (typeof window.navigator.share !== \"function\") return null;\n\n  const share = () => {\n    if (typeof window.navigator.share === \"function\") {\n      window.navigator.share({url});\n    }\n  };\n\n  let icon = DeviceDetector.isAndroid() ? \"fa-share-alt\" : \"fa-share-square\";\n\n  return <ShareIcon onClick={share} className={`fas ${icon}`} />;\n};\n\nexport const Lobby = ({currentUser, game, startGame, history}) => {\n  const startTheGame = () => {\n    startGame();\n  };\n\n  const shareUrl = `${host}/${currentUser.gameKey}`;\n\n  const opponents = game.players;\n\n  useEffect(() => {\n    if (game.word.length) history.push(\"/game\");\n  }, [game.word]);\n\n  return (\n    <Wrapper>\n      <GameHeader>\n        <h2 className=\"gameHeader\">{currentUser.gameKey}</h2>\n        {currentUser.isCreator === \"createGame\" ? (\n          <Button primary noMargin onClick={startTheGame}>\n            {\" \"}\n            Start!{\" \"}\n          </Button>\n        ) : (\n            \"\"\n          )}\n      </GameHeader>\n      <h3>Practice your drawing skills!</h3>\n\n      <Canvas />\n      <LobbyWaiting>\n        <p>Waiting for other players...</p>\n      </LobbyWaiting>\n\n\n      <PlayerList>\n        <PoseGroup>\n          {opponents &&\n            Object.values(opponents).map((player, index) => {\n              if (player.playerId === currentUser.userId) return;\n              return (\n                <Player key={player.playerId}>\n                  <PlayerAvatar key={index} info={player} />\n                  <h3>{player.playerName}</h3>\n                </Player>\n              )\n            })}\n        </PoseGroup>\n      </PlayerList>\n      <ShareButton url={shareUrl} />\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  currentUser: state.currentUser,\n  game: state.game\n});\n\nconst mapDispatchToProps = dispatch => ({\n  startGame: () => dispatch(Actions.startGame())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Lobby);\n","import styled from \"styled-components/macro\";\n\nconst GuessingContainer = styled.div`\n  align-items: flex-start;\n  display: flex;\n  width: 375px;\n  justify-content: space-between;\n  margin-top: 20px;\n`;\n\nexport default GuessingContainer;\n","import React from \"react\";\n\n// import Background from '../checkMark.png'\nconst Background = require('../checkMark.png')\n\nconst CheckMark = () => {\n  return (\n    <div \n      style={{\n      width: \"60px\",\n      height: \"60px\",\n      backgroundImage: `url(${Background})`,\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat'\n    }}>\n\n    </div>\n  );\n}\n\nexport default CheckMark;\n","import styled from \"styled-components/macro\";\n\nconst TimeRemaining = styled.span`\n  color: #fff;\n  font-size: 1.4rem;\n  font-weight: 200;\n  max-width: 200px;\n  margin-top: 20px;\n\n  h2,\n  p {\n    margin: 0;\n  }\n`;\n\nexport default TimeRemaining;\n","import styled, { css } from \"styled-components/macro\";\n\nconst ZorbContainer = styled.div`\n  svg {\n    width: 150px;\n    filter: drop-shadow(1px 3px 2px rgba(0, 0, 0, 0.1));\n  }\n\n  .levitate {\n    animation: levitate 3s cubic-bezier(0.57, 0.19, 0.25, 0.75) infinite;\n    transform-origin: 50% 50%;\n  }\n\n  @keyframes levitate {\n    from {\n      transform: rotate(0deg) translate(-15px) rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg) translate(-15px) rotate(-360deg);\n    }\n  }\n\n  ${props =>\n    props.zorbGuessing &&\n    css`\n      transform: scale(0.75);\n\n      .levitate {\n        animation: none;\n      }\n    `};\n`;\n\nexport default ZorbContainer;\n","import React, { useEffect, useState } from \"react\";\nimport Countdown from \"react-countdown-now\";\n\n// Redux Imports\nimport { connect } from \"react-redux\";\n// Component & Container Imports\nimport Canvas from \"../components/Canvas\";\nimport GuessingContainer from \"../components/GuessingContainer\";\nimport PlayerAvatar from \"../components/PlayerAvatar\";\nimport CheckMark from \"../components/CheckMark\";\nimport PlayerList from \"../components/PlayerList\";\nimport SpeechBubble from \"../components/SpeechBubble\";\nimport TimeRemaining from \"../components/TimeRemaining\";\nimport WordToDraw from \"../components/WordToDraw\";\nimport Wrapper from \"../components/Wrapper\";\nimport Zorb from \"../components/Zorb\";\nimport ZorbContainer from \"../components/ZorbContainer\";\n\nexport const Game = ({ history, game, currentUser }) => {\n  const [count, setCount] = useState(0);\n  const [guessCount, setGuessCount] = useState(0);\n  const [time, setTime] = useState(0);\n\n  const opponents = game.players;\n\n  useEffect(() => {\n    setTime(Date.now() + 20000);\n    if (game.endGame) history.push(\"/results\");\n    else if (game.endRound && count > 0) {\n      history.push(\"/between-rounds\");\n      setCount(0);\n    }\n    setCount(1);\n  }, [game.endGame, game.endRound]);\n\n  useEffect(() => {\n    let win;\n    if (game.rounds && count > 0) {\n      win = game.rounds.filter(round => {\n        return round.roundNum === game.round\n      })\n      .map(el => el.winners)\n\n      if (win.flat().includes(currentUser.userId)) {\n          history.push('/guessed-correctly');\n          win = null;\n          setGuessCount(0);\n        }\n      }\n      setGuessCount(1) \n  }, [game.rounds])\n\n  const renderer = ({ seconds, completed }) => {\n    if (completed) {\n      return <p>{`Time's up!`}</p>;\n    } else {\n      return (\n        <>\n          <h2>{seconds}</h2>\n          <p>{\" seconds remaining\"}</p>\n        </>\n      );\n    }\n  };\n\n  const Guessing = props => {\n    if (props.guess) {\n      return `I see ${props.guess}!`;\n    } else {\n      return \"Thinking...\";\n    }\n  };\n\n  return (\n    <Wrapper>\n      <WordToDraw>\n        Can you draw...\n        <h3>{game.word}</h3>\n      </WordToDraw>\n\n      <Canvas />\n      <GuessingContainer>\n        <div>\n          <SpeechBubble zorbThinking>\n            <Guessing guess={game.guess} />\n          </SpeechBubble>\n          <ZorbContainer zorbGuessing>\n            <Zorb />\n          </ZorbContainer>\n        </div>\n\n        <TimeRemaining>\n          <Countdown date={time} renderer={renderer} />\n        </TimeRemaining>\n      </GuessingContainer>\n\n      <PlayerList game>\n        {opponents &&\n          Object.values(opponents).map((player, index) => {\n            if (game.rounds[game.round-1] && game.rounds[game.round-1].winners.includes(player.playerId)) {\n              return (\n                <div key={player.playerId}>\n                  <CheckMark key={index}/>\n                  <h3>{player.playerName}</h3>\n                </div>\n              )\n            }\n            else {\n              return (\n                <div key={player.playerId}>\n                  <PlayerAvatar key={index} info={player} />\n                  <h3>{player.playerName}</h3>\n                </div>\n              )\n            } \n        })}\n      </PlayerList>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = state => ({\n  game: state.game,\n  currentUser: state.currentUser\n});\n\nexport default connect(mapStateToProps)(Game);\n","import React, {useEffect, useState, useRef} from 'react';\nimport Countdown from 'react-countdown-now';\n\n// Redux Imports\nimport {connect} from 'react-redux';\n\n// Component & Container Imports\nimport DrawingStack from '../components/DrawingStack';\nimport PlayerAvatar from '../components/PlayerAvatar';\n// import PlayerEmptySlot from \"../components/PlayerEmptySlot\";\nimport PlayerList from '../components/PlayerList';\nimport PolaroidPicBackground from '../components/PolaroidPicBackground';\nimport TimeRemaining from '../components/TimeRemaining';\nimport WordToDraw from '../components/WordToDraw';\nimport Wrapper from '../components/Wrapper';\nimport styled from 'styled-components';\nconst DrawnImage = styled.img``;\n\nconst Author = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 10px;\n  font-size: 1.5rem;\n  `;\n\nexport const BetweenRounds = ({history, game, currentUser}) => {\n  const [count, setCount] = useState(0);\n  const opponents = game.players;\n  const countRef = useRef(count);\n  countRef.current = count;\n\n  useEffect(() => {\n    if (count > 0) {\n      if (game) {\n        history.push('/game');\n      }\n      setCount(0);\n    }\n    setCount(1);\n  }, [game.word]);\n\n  const renderer = ({seconds}) => {\n    return <span> {seconds} </span>;\n  };\n\n  return (\n    <Wrapper>\n      <WordToDraw inBetween>\n        <h2 className='gameHeader'>{game.word}</h2>\n      </WordToDraw>\n\n      <DrawingStack>\n        {game.rounds[game.round - 1] !== undefined &&\n          game.rounds[game.round - 1].drawings !== undefined &&\n          game.rounds[game.round - 1].drawings.map((drawing, i) => (\n            <PolaroidPicBackground key={i} delay={i * 2000}>\n              <div key={i}>\n                <SimpleSvg image={drawing.svg} />\n                <Author>\n                  <PlayerAvatar info={drawing} size={74} />\n                  <span style={{marginLeft: 10}}><b>{drawing.playerName}</b><br />drew that!</span>\n                </Author>\n              </div>\n            </PolaroidPicBackground>\n          ))}\n      </DrawingStack>\n\n\n      <TimeRemaining>\n        Next round starts in{' '}\n        <Countdown date={Date.now() + 4000} renderer={renderer} /> seconds\n      </TimeRemaining>\n    </Wrapper>\n  );\n};\n\nfunction SimpleSvg(props) {\n  const encodedImage = btoa(props.image);\n  const imageSrc = `data:image/svg+xml;base64,${encodedImage}`;\n  return (\n    <DrawnImage src={imageSrc} style={{width: '100%', height: '100%'}} />\n  );\n}\n\nconst mapStateToProps = state => ({\n  game: state.game,\n  currentUser: state.currentUser\n});\n\nexport default connect(mapStateToProps)(BetweenRounds);\n","import React, {useEffect, useState} from 'react';\nimport Confetti from 'react-dom-confetti';\n\nconst config = {\n  angle: 90,\n  spread: 45,\n  startVelocity: \"72\",\n  elementCount: \"83\",\n  dragFriction: 0.1,\n  duration: \"6240\",\n  delay: 0,\n  width: \"10px\",\n  height: \"10px\",\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n\n};\nconst WinConfetti = () => {\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() =>  setActive(true), 500);\n  }, []);\n\n  return (<Confetti active={active} config={config} />)\n}\n\nexport default WinConfetti;\n","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components/macro\";\nimport SplitText from \"react-pose-text\";\n\n// Redux Imports\nimport {connect} from \"react-redux\";\n\n// Component & Container Imports\nimport Wrapper from \"../components/Wrapper\";\nimport SpeechBubble from \"../components/SpeechBubble\";\nimport Zorb from \"../components/Zorb\";\nimport ZorbContainer from \"../components/ZorbContainer\";\n\nimport CheckMark from \"../components/CheckMark\";\nimport PlayerList from \"../components/PlayerList\";\nimport PlayerAvatar from \"../components/PlayerAvatar\";\nimport Confetti from \"../components/Confetti\";\n\nexport const GuessedCorrectly = ({history, game}) => {\n  const [count, setCount] = useState(0);\n\n  const opponents = game.players;\n\n  useEffect(() => {\n    if (count > 0) {\n      if (game.endGame) {\n        history.push(\"/results\");\n        setCount(0);\n      }\n      else if (game.endRound) {\n        history.push(\"/between-rounds\");\n        setCount(0);\n      }\n    }\n    setCount(1)\n  }, [game.endRound, game.endGame]);\n\n  const charPoses = {\n    exit: {opacity: 0},\n    enter: {\n      opacity: 1,\n      delay: ({charIndex}) => charIndex * 5\n    }\n  };\n  return (\n    <Wrapper GuessedCorrectly>\n      <SpeechBubble inGame>Great drawing speedy!</SpeechBubble>\n      <ZorbContainer>\n        <Zorb />\n      </ZorbContainer>\n\n      <StyledText>\n        <p>\n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n            You made that one easy for me to guess. Just waiting for your\n            opponents to finish...\n          </SplitText>\n        </p>\n      </StyledText>\n      <PlayerList game>\n        {opponents &&\n          Object.values(opponents).map((player, index) => {\n            if (game.rounds[game.round - 1] && game.rounds[game.round - 1].winners.includes(player.playerId)) {\n              return (\n                <div key={player.playerId}>\n                  <CheckMark key={index} />\n                  <h3>{player.playerName}</h3>\n                </div>\n              )\n            }\n            else {\n              return (\n                <div key={player.playerId}>\n                  <PlayerAvatar key={index} info={player} />\n                  <h3>{player.playerName}</h3>\n                </div>\n              )\n            }\n          })}\n      </PlayerList>\n      <Confetti active={true} />\n    </Wrapper>\n  );\n};\n\nconst StyledText = styled.div`\n  padding: 0 40px;\n  color: #472c81;\n\n  p {\n    font-size: 1.4rem;\n    font-weight: 200;\n  }\n`;\n\nconst mapStateToProps = state => ({\n  game: state.game\n});\n\nexport default connect(mapStateToProps)(GuessedCorrectly);\n","import React from \"react\";\n\n// React Router Imports\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"; // eslint-disable-line\n\n// Redux Imports\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../redux/actions/index\";\n\n// Component & Container Imports\nimport Button from \"../components/Button\";\nimport Wrapper from \"../components/Wrapper\";\nimport Zorb from \"../components/Zorb\";\nimport ZorbContainer from \"../components/ZorbContainer\";\n\n// Library Imports\nimport styled from \"styled-components/macro\";\n\nexport const Main = props => {\n  return (\n    <Wrapper>\n      <Container>\n        <ZorbContainer>\n          <Zorb />\n        </ZorbContainer>\n        <div>\n          <Header>{`What's that?`}</Header>\n          <Hero>\n            You draw, BUGY guesses. You have only 20 seconds per round to show\n            off your artistic skills. Can BUGY understand what you are trying to\n            draw? Let&apos;s get started!\n          </Hero>\n        </div>\n        <div>\n          <Link to=\"/join\">\n            <Button>Join</Button>\n          </Link>\n          <Link to=\"/create\">\n            <Button primary onClick={props.getGameKey}>\n              Create\n            </Button>\n          </Link>\n        </div>\n      </Container>\n    </Wrapper>\n  );\n};\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100vh;\n`;\n\nconst Header = styled.h1`\n  margin: 4vh 0;\n`;\n\nconst Hero = styled.p`\n  font-size: 1.2rem;\n  font-weight: 200;\n  margin-bottom: 6vh;\n  padding: 0 15vw;\n`;\n\nconst mapDispatchToProps = dispatch => ({\n  getGameKey: () => dispatch(Actions.getKey())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Main);\n","import React from 'react';\nimport {BetweenRounds} from './BetweenRounds';\nimport props from './props.json';\n\n\nconst Playground = () => {\n  return <BetweenRounds {...props} />;\n};\n\nexport default Playground;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components/macro';\n\n// Router Setup\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'; // eslint-disable-line\n\n// Component & Container Imports\nimport ComponentsCatalogue from './containers/ComponentsCatalogue';\nimport Create from './containers/Create';\nimport Join from './containers/Join';\nimport Lobby from './containers/Lobby';\nimport Game from './containers/Game';\nimport Results from './containers/Results';\nimport BetweenRounds from './containers/BetweenRounds';\nimport GuessedCorrectly from './containers/GuessedCorrectly';\nimport Main from './containers/Main';\nimport Playground from './containers/Playground';\n\n// Styling & Animations\nimport './App.css';\nimport posed, { PoseGroup } from 'react-pose';\n\nconst RouteContainer = posed.div({\n  enter: { opacity: 1, delay: 300, beforeChildren: true },\n  exit: { opacity: 0 }\n});\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: #764ad7;\n    color: #ffffff;\n    // overflow: hidden;\n    height: 100vh;\n    margin: 0;\n    max-height: 100vh;\n    @import url(\"https://fonts.googleapis.com/css?family=Nunito:200,400,600\");\n    font-family: 'Nunito', sans-serif;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  .gameHeader {\n    font-size: 2rem;\n    margin: 0;\n  }\n  .small {\n    font-size: 0.8rem;\n  }\n  .lightweight {\n    font-weight: 200;\n  }\n`;\n\nconst App = () => (\n  <Route\n    render={({ location }) => (\n      <>\n        <GlobalStyle />\n\n        <PoseGroup>\n          <RouteContainer key={location.pathname}>\n            <Switch location={location}>\n              <Route exact path='/' component={Main} pathname='Main' />\n              <Route path='/create' component={Create} pathname='Create' />\n              <Route path='/join' component={Join} pathname='Join' />\n              <Route\n                path='/components'\n                component={ComponentsCatalogue}\n                pathname='ComponentsCatalogue'\n              />\n              <Route path='/lobby' component={Lobby} pathname='Lobby' />\n              <Route path='/game' component={Game} pathname='Game' />\n              <Route\n                path='/between-rounds'\n                component={BetweenRounds}\n                pathname='BetweenRounds'\n              />\n              <Route\n                path='/guessed-correctly'\n                component={GuessedCorrectly}\n                pathname='GuessedCorrectly'\n              />\n              <Route path='/results' component={Results} pathname='Results' />\n              <Route path='/playground' component={Playground} />\n            </Switch>\n          </RouteContainer>\n        </PoseGroup>\n      </>\n    )}\n  />\n);\n\nexport default App;\n","import * as SocketTypes from \"../actions/socketTypes\";\nimport * as ActionTypes from \"../actions/gameTypes\";\n\nconst initialState = {\n  word: [],\n  join: {},\n  inBetweenRounds: false,\n  endGame: false,\n  guess: \"\",\n  winners: [],\n  rounds: []\n};\n\nexport default (state = initialState, action) => {\n  if (action.type === ActionTypes.SOCKET_MESSAGE) {\n    switch (action.payload.type) {\n      case SocketTypes.GAME_CREATED:\n        return {\n          ...state,\n          gameKey: action.payload.payload.gameKey\n        };\n      case SocketTypes.JOINED:\n        return {\n          ...state,\n          players: action.payload.payload.players\n        };\n      case SocketTypes.START_ROUND:\n        return {\n          ...state,\n          word: action.payload.payload.word,\n          timer: action.payload.payload.timer,\n          inBetweenRounds: !state.inBetweenRounds,\n          round: action.payload.payload.roundNum,\n          guess: undefined\n        };\n      case SocketTypes.END_ROUND:\n        return {\n          ...state,\n          endRound: action.payload.payload.roundNum\n        };\n      case SocketTypes.GUESS:\n        return {\n          ...state,\n          guess: action.payload.payload.word\n        };\n      case SocketTypes.VICTORY: {\n        const data = action.payload.payload;\n        return {\n          ...state,\n          rounds: [\n            ...state.rounds,\n            {\n              roundNum: data.round.currentRound,\n              winners: data.players\n                .filter(player => {\n                  const round = player.roundWins.find(\n                    round => round.round === data.round.currentRound\n                  );\n                  return round && round.winner;\n                })\n                .map(player => player.id)\n            }\n            // {\n            //     action.payroundNum,\n            //     winners: [winnerId],\n            //     // drawings: [{\n            //     //   svg,\n            //     //   author\n            //     // }]\n            // }\n          ]\n\n          // action.payload.payload.players.filter((player) => {\n          //   return player.roundWins\n        };\n      }\n\n      // {\n      //   type: 'SOCKET_MESSAGE',\n      //   payload: {\n      //     type: 'roundDrawings',\n      //     payload: {\n      //       round: {\n      //         currentRound: 1,\n      //         word: 'helmet',\n      //         roundStatus: false\n      //       },\n      //       playing: false,\n      //       players: [\n      //         {\n      //           playerName: 'asdf',\n      //           playerAvatar: {\n      //             avatarStyle: 'Circle',\n      //             topType: 'LongHairBob',\n      //             accessoriesType: 'Round',\n      //             hairColor: 'Blonde',\n      //             facialHairType: 'Blank',\n      //             facialHairColor: 'Brown',\n      //             clotheType: 'GraphicShirt',\n      //             clotheColor: 'Pink',\n      //             graphicType: 'Pizza',\n      //             eyeType: 'EyeRoll',\n      //             eyebrowType: 'Default',\n      //             mouthType: 'Twinkle',\n      //             skinColor: 'Tanned'\n      //           },\n      //           roundWins: [\n      //             {\n      //               round: 1,\n      //               winner: true\n      //             }\n      //           ],\n      //           isCreator: true,\n      //           gameKey: 'Cool-Snow',\n      //           draws: [\n      //             {\n      //               round: 1,\n      //               draw: '<svg xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" height=\"375\" width=\"375\" viewBox=\"0 0 375 375\"></svg>',\n      //               word: 'helmet',\n      //               winner: [\n      //                 {\n      //                   round: 1,\n      //                   winner: true\n      //                 }\n      //               ]\n      //             }\n      //           ],\n      //           id: 'b99X4dfRD6rkAf-ZAAAA'\n      //         }\n      //       ],\n      //       totalRounds: 2,\n      //       gameKey: 'Cool-Snow'\n      //     }\n      //   }\n      // }\n\n      case SocketTypes.ROUND_DRAWINGS: {\n        const data = action.payload.payload;\n        const newState = {\n          ...state,\n          rounds: state.rounds.filter(\n            round => round.roundNum !== data.round.currentRound\n          )\n        };\n        return {\n          ...state,\n          playerDrawings: action.payload.payload.players,\n          rounds: [\n            ...newState.rounds,\n            {\n              roundNum: data.round.currentRound,\n              winners: data.players\n                .filter(player => {\n                  const round = player.roundWins.find(\n                    round => round.round === data.round.currentRound\n                  );\n                  return round && round.winner;\n                })\n                .map(player => player.id),\n              drawings: data.players.map(player => ({\n                author: player.id,\n                svg: player.draws.find(draw => {\n                  return draw.round === data.round.currentRound;\n                }).draw,\n                word: player.draws.find(draw => {\n                  return draw.round === data.round.currentRound;\n                }).word,\n                playerName: player.playerName,\n                playerAvatar: player.playerAvatar\n              }))\n            }\n          ]\n        };\n      }\n      case SocketTypes.GAME_OVER:\n        return {\n          ...state,\n          endGame: !state.endGame\n        };\n      case SocketTypes.GAME_RESET: {\n        const game = action.payload.payload;\n        return {\n          ...initialState,\n          gameKey: game.gameKey,\n          players: game.players,\n          round: game.round.currentRound,\n          inBetweenRounds: game.round.roundStatus\n        };\n      }\n      default:\n        return state;\n    }\n  } else {\n    return state;\n  }\n};\n\n// {\n//   type: 'SOCKET_MESSAGE',\n//   payload: {\n//     type: 'victory',\n//     payload: {\n//       round: {\n//         currentRound: 1,\n//         word: 'lightning',\n//         roundStatus: true\n//       },\n//       playing: false,\n//       players: [\n//         {\n//           playerName: 'asd',\n//           playerAvatar: {\n//             avatarStyle: 'Circle',\n//             topType: 'ShortHairShortFlat',\n//             accessoriesType: 'Blank',\n//             hairColor: 'BlondeGolden',\n//             facialHairType: 'Blank',\n//             facialHairColor: 'BrownDark',\n//             clotheType: 'BlazerShirt',\n//             clotheColor: 'PastelYellow',\n//             graphicType: 'Diamond',\n//             eyeType: 'Wink',\n//             eyebrowType: 'DefaultNatural',\n//             mouthType: 'Grimace',\n//             skinColor: 'Brown'\n//           },\n//           roundWins: [\n//             {\n//               round: 1,\n//               winner: true\n//             }\n//           ],\n//           isCreator: true,\n//           gameKey: 'Wild-Haze',\n//           draws: [],\n//           playerId: '2CZ5wmgztVyfElyvAAAC'\n//         }\n//       ],\n//       totalRounds: 2,\n//       gameKey: 'Wild-Haze'\n//     }\n//   }\n// }\n","import * as ActionTypes from '../actions/pagesTypes';\nimport * as GameActionTypes from '../actions/gameTypes';\n// import socketReducer from './socketReducer';\n\nconst initialState = {\n  join: {}\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_KEY_SUCCESS:\n      return {\n        ...state,\n        create: {\n          gameKey: action.data.key,\n          loading: false\n        }\n      };\n    case ActionTypes.GET_KEY_FAILURE:\n      return {\n        ...state,\n        create: {\n          loading: false\n        }\n      };\n    case ActionTypes.GET_KEY_LOADING:\n      return {\n        ...state,\n        create: {\n          loading: true\n        }\n      };\n    case GameActionTypes.SOCKET_MESSAGE:\n      switch (action.payload.type) {\n        case ActionTypes.FAILURE:\n          return {\n            ...state,\n            join: {\n              error: 'Game does not exist'\n            }\n          };\n        default:\n          return state;\n      }\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from '../actions/gameTypes';\n\nconst initialState = {\n  gameKey: undefined\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.SET_USERID:\n    return {\n      ...state,\n      userId: action.payload\n    }\n    case ActionTypes.GET_KEY:\n      return {\n        ...state,\n        gameKey: action.payload.gameKey\n      };\n    case ActionTypes.PLAYER_INFO:\n      return {\n        ...state,\n        playerName: action.playerName,\n        gameKey: action.gameKey,\n        isCreator: action.socket.type\n      };\n    case ActionTypes.USER_AVATAR:\n      return {\n        ...state,\n        userAvatar: action.avatar\n      };\n    case ActionTypes.CREATOR_START_GAME:\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport game from './gameReducer';\nimport pages from './pagesReducer';\nimport currentUser from './currentUserReducer';\n\nexport default combineReducers({\n  pages,\n  game,\n  currentUser\n});\n","export const GET_KEY_SUCCESS = 'GET_KEY_SUCCESS'\nexport const GET_KEY_FAILURE = 'GET_KEY_FAILURE'\nexport const GET_KEY_LOADING = 'GET_KEY_LOADING'\nexport const FAILURE = 'failure'\n","export const GAME_CREATED = 'gameCreated';\nexport const JOINED = 'playerJoin';\nexport const START_ROUND = 'startRound';\nexport const GUESS = 'guess';\nexport const VICTORY = 'victory';\nexport const ROUND_DRAWINGS = 'roundDrawings';\nexport const GAME_DRAWINGS = 'gameDrawings';\nexport const GAME_OVER = 'gameOver';\nexport const END_ROUND = 'endRound';\nexport const GAME_RESET = 'gameReset';\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport reducer from './reducers';\n//import { logger } from './middlewares/logger';\nimport { api } from './middlewares/api';\nimport { socket } from './middlewares/sockets';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = [api, socket];\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nexport const createRedux = () => {\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n","export const api = store => next => action => {\n  if (!action.api) return next(action);\n\n  const { api } = action;\n\n  const method = api.method || 'GET';\n  const body = api.body ? JSON.stringify(body) : undefined\n\n  next({\n    type: `${action.type}_LOADING`\n  });\n\n  fetch(api.url, {\n    method, \n    body\n  })\n    .then(res => res.json())\n    .then(data => {\n      store.dispatch({\n        type: `${action.type}_SUCCESS`,\n        data\n      });\n    })\n    .catch(error => {\n      store.dispatch({\n        type: `${action.type}_FAILURE`,\n        error\n      });\n    });\n\n}","import io from 'socket.io-client';\n\nexport const socket = store => {\n  let socket;\n\n  return next => action => {\n    if (!action.socket) return next(action);\n    const { command, payload, type } = action.socket;\n    if (command) {\n      switch (command) {\n        case 'CONNECT':\n          socket = io(`${process.env.REACT_APP_SERVER_BASE_URL}`);\n          break;\n        default:\n          break;\n      }\n\n      socket.on('connect', () => {\n        store.dispatch({\n          type: 'SET_USERID',\n          payload: socket.id\n        });\n      });\n\n      socket.on('message', message => {\n        //console.log('INPUT', message);  //eslint-disable-line\n        store.dispatch({\n          type: 'SOCKET_MESSAGE',\n          payload: message\n        });\n      });\n    }\n\n    // Outputs (emit)\n    if (payload) {\n      socket.emit('message', {\n        type,\n        payload\n      });\n      next(action);\n    }\n\n    next(action);\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\n// Redux Imports\nimport { Provider } from \"react-redux\";\nimport { createRedux } from \"./redux/store\";\n\n// Router Setup\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = createRedux();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}